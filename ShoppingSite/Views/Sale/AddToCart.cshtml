
@{
    ViewBag.Title = "AddToCart";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";

    var products = ViewBag.Products as List<Shopping.Entity.Models.Product>;
    var users = ViewBag.Users as List<Shopping.Entity.Models.User>;
    var datetime = DateTime.Now;
}
<head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
        <title>Satış Ekranı</title>

        <style>

            .mac-style {
                /*width: 110px;*/
                -webkit-transition: width 0.3s ease-in-out;
                -moz-transition: width 0.3s ease-in-out;
                -o-transition: width 0.3s ease-in-out;
                transition: width 0.3s ease-in-out;
            }

                .mac-style:focus {
                    width: 120px;
                }
        </style>
    </head>
<body>
    <div class="container mt-4">
        <div class="row justify-content-center">
            <div class="col-12 col-lg-8">
                <div class="card">
                    <div class="card-header fw-bold bg-dark p-2 text-white bg-opacity-75" style="font-size: 13pt !important;">
                        <i class="bi bi-basket2"></i> Sale Page
                    </div>
                    <div class="card-body">
                        <form method="post" action="/Sale/AddToCart">
                            <div class="form-group mb-3">
                                <label class="mb-1">Select Product:</label>
                                <div class="input-group">
                                    <select class="form-control" id="productSelect" name="CartItemViewModel[0].ProductId">
                                        <option value>Select Product</option>
                                        @foreach (var item in products)
                                        {
                                            <option value="@item.Id" data-price="@item.Price">@item.Name</option>
                                        }
                                    </select>
                                    <button type="button" class="btn btn-primary btn-sm" onclick="AddProduct()">
                                        <i class="bg-info bi-cart-plus">
                                            </i> 
                                             " ADD "
                                    </button>
                                </div>
                                <hr />
                                <select class="form-control" name="UserId">
                                    @foreach (var item in users)
                                    {
                                        <option value="@item.Id">@item.FullName</option>
                                    }
                                </select>
                            </div>
                            <div class="form-group">
                                <label>Products</label>
                                    <table class="table table-bordered" id="block">
                                        <thead>
                                            <tr class=table-light>
                                                <th class="align-middle text-center" style="width: 20%">Product</th>
                                                <th class="align-middle text-center">Quantity</th>
                                                <th class="align-middle text-center">Unit Price</th>
                                                <th class="align-middle text-center">Total Amount</th>
                                                <th class="align-middle text-center" style="width: 5% !important;">Delete</th>
                                            </tr>
                                        </thead>
                                        <tbody id="productList">
                                        </tbody>
                                     </table>
                                <hr />
                                <p class="text-end">
                                    <b>Price</b>
                                    <span id="Price">0,00</span>
                                </p>
                            </div>
                            <hr>
                            <div class="text-end">
                                <button type="submit" class="btn btn-success fw-bold btn-sm">Go To Cart</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

@*<script>
        // productSelect elementinin change olayı tetiklendiğinde çalışacak fonksiyon
        document.getElementById("productSelect").addEventListener("change", function () {
            // Seçilen ürünün fiyatını al
            var selectedOption = this.options[this.selectedIndex];
            var selectedProductPrice = selectedOption.getAttribute("data-price");

            // Price elementine fiyatı yazdır
            document.getElementById("Price").innerText = selectedProductPrice;
        });
    </script>*@

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    window.onbeforeunload = function () {
        return "Are you sure you want to refresh the page?";
    };

    $(document).ready(function () {
        // Sayfa yenilenmesi onaylandığında olay dinleyicisini kaldır
        $(window).on('beforeunload', function () {
            $(window).off('beforeunload');
        });
    });
    var productIndex = 0;

    function addProduct() {

        var items = document.getElementById("VisibleNone");

        for (var i = 0; i < items.length; i++) {
            items[i].style.display = "block";
        }

        var productId = $('#productSelect option:selected').val();
        var productName = $('#productSelect option:selected').text();

        var unitprice = 0;

        if (productId === '' || isNaN(productPrice)) {
            alert('Please select a valid product.');
            return;
        }

        var existingRow = $('#productList tr').filter(function () {
            return $(this).find('input[name$=".Id"]').val() == productId;
        });

        if (existingRow.length > 0) {
            var quantityInput = existingRow.find('input[name$=".Quantity"]');
            var quantity = parseInt(quantityInput.val()) + 1;
            quantityInput.val(quantity);
            calculateRow(quantityInput);
        }
        else {
            $.ajax({
                url: '/Sale/GetProductPrice', // ControllerAdi, kontrolörünüzün adı ile değiştirilmelidir
                type: 'GET',
                data: { productId: productId },
                success: function (result) {
                    unitprice = result.unitprice;

                    var newRow =
                        '<tr> ' +
                        '<td class="align-middle">' + productName +
                        '<input type="hidden" name="CartItemViewModel[' + productIndex + '].Id" value="' + productId + '" /></td>' +
                        '<td class="align-middle">' +
                        '<input type="number" name="CartItemViewModel[' + productIndex + '].Quantity" value="1" class="form-control form-control-sm" oninput="calculateRow(this)" /></td>' +
                        '<td class="align-middle">' +
                        '<input type="number" name="CartItemViewModel[' + productIndex + '].UnitPrice" value="' + productPrice.toFixed(2) + '" class="form-control form-control-sm" oninput="calculateRow(this)" /></td>' +
                        '<td class="align-middle">' +
                        '<input type="number" name="CartItemViewModel[' + productIndex + '].TotalPrice" value="' + productPrice.toFixed(2) + '" class="form-control form-control-sm" readonly /></td>' +
                        '<td class="align-middle text-center">' +
                        '<button type="button" class="btn btn-danger btn-sm" onclick="removeProduct(this)">' +
                        ' <i class="bi bi-trash"></i>' +
                        '</button>' +
                        '/td>' +
                        '</tr>';

                    $('#productList').append(newRow);
                    productIndex++;
                    calculateTotal();
                },
                error: function () {
                    alert('Birim fiyat alınamadı. Yeniden Deneyin!');
                }
            });
        }
    }

    function calculateRow(input) {
        var row = $(input).closest('tr');
        var quantity = parseFloat(row.find('input[name$="[Quantity]"]').val()) || 0;
        var unitPrice = parseFloat(row.find('input[name$="[UnitPrice]"]').val()) || 0;
        var totalPrice = quantity * unitPrice;
        row.find('input[name$="[TotalPrice]"]').val(totalPrice.toFixed(2));
        calculateTotal();
    }

    function calculateTotal() {
        var totalAmount = 0;
        $('#productList tr').each(function () {
            var totalPrice = parseFloat($(this).find('input[name$=".TotalPrice"]').val()) || 0;
            totalAmount += totalPrice;
        });
        //$('#TotalAmount').text(totalAmount.toFixed(2));
        $(totalAmount).text(totalAmount.toLocaleString('tr-TR', { minimumFractionDigits: 2 }));
    }

    function removeProduct(button) {
        $(button).closest('tr').remove();
        $('#productList tr').each(function (index, row) {
            $(row).find('input').each(function (i, input) {
                var name = $(input).attr('name');
                var newName = name.replace(/\[(\d+)\]/, '[' + index + ']');
                $(input).attr('name', newName);
            });
        });
        calculateTotal();


        'window.addProduct = addProduct;'
        'window.calculateRow = calculateRow;'
        'window.removeProduct = removeProduct;'
    }
</script>
